{"version":3,"file":"static/js/607.290ce29f.chunk.js","mappings":"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","sources":["components/CardItem/CardItem.tsx","firebase/FirebaseFavourites.tsx","pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import { FeatureFlagContext } from '../../contexts/FeatureFlagContext'\nimport { useAuthentication } from '../../firebase/FirebaseAuth'\nimport { useLiked } from '../../firebase/FirebaseFavourites'\nimport React, { useCallback, useContext } from 'react'\nimport type { IProduct } from '../../types/type'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport './CardItem.css'\n\ninterface CardsItems {\n  id: number\n  price: number\n  title: string\n  image: string\n  product: IProduct\n}\n\nexport default function CardItem({\n  id,\n  price,\n  title,\n  image,\n  product,\n}: CardsItems) {\n  const { isLiked, toggleIsLiked } = useLiked(id)\n  const { isTelegramShareEnabled } = useContext(FeatureFlagContext)\n  const { isLogin } = useAuthentication()\n  const cardLikeButtonClassName = isLiked ? 'card__like-active' : ''\n\n  const likeHandler = () => {\n    toggleIsLiked(product)\n  }\n\n  const handleShareClick = useCallback(() => {\n    const encodedURL = `https://t.me/share/url?url=${encodeURIComponent(\n      `${window.location.href}product/${id}`,\n    )}&text=${encodeURIComponent(title)}`\n    window.open(encodedURL, '_blank')\n  }, [title, id])\n\n  return (\n    <div className=\"card\">\n      <Link to={`/product/${product.id}`} className=\"card__link\" role=\"link\">\n        <img className=\"card__img\" src={image} alt={title} />\n        <h3 className=\"card__title\">{title}</h3>\n      </Link>\n      <div className=\"card__description\">\n        <p className=\"card__price\">{price}$</p>\n        {isLogin && (\n          <>\n            <button\n              onClick={likeHandler}\n              type=\"submit\"\n              className={`card__like ${cardLikeButtonClassName}`}\n            ></button>\n            {isTelegramShareEnabled && (\n              <button\n                onClick={handleShareClick}\n                type=\"submit\"\n                className=\"card__share\"\n              >\n                share\n              </button>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nCardItem.propTypes = {\n  id: PropTypes.number,\n  price: PropTypes.number,\n  title: PropTypes.string,\n  image: PropTypes.string,\n  product: PropTypes.shape({\n    category: PropTypes.string,\n    description: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }),\n}\n","import {\n  arrayRemove,\n  arrayUnion,\n  doc,\n  onSnapshot,\n  setDoc,\n  updateDoc,\n} from 'firebase/firestore'\nimport { useAppSelector } from '../redux/dispatch'\n\nimport { useNavigate } from 'react-router-dom'\nimport type { IProduct } from '../types/type'\nimport { useEffect, useState } from 'react'\nimport { db } from './firebase.config'\n\nconst useLiked = (productId: number | null) => {\n  const currentUser = useAppSelector((state) => state.auth.user)\n  const navigate = useNavigate()\n  const [isLiked, setIsLiked] = useState(false)\n\n  useEffect(() => {\n    if (!currentUser || !productId) {\n      return\n    }\n\n    const unsubscribe = onSnapshot(\n      doc(db, 'users', currentUser.uid),\n      (snapshot) => {\n        const data = snapshot.data()\n        if (data && data.bookmarks) {\n          setIsLiked(\n            data.bookmarks.some((item: IProduct) => item.id === productId),\n          )\n        }\n      },\n    )\n    return () => {\n      unsubscribe()\n    }\n  }, [currentUser, productId])\n\n  const toggleIsLiked = async (product: IProduct | undefined) => {\n    if (!currentUser) {\n      navigate('/login')\n      return\n    }\n    const userDocRef = doc(db, 'users', currentUser.uid)\n    try {\n      await setDoc(userDocRef, {}, { merge: true })\n\n      const productData = {\n        id: product?.id,\n        title: product?.title,\n        price: product?.price,\n        image: product?.image,\n        description: product?.description,\n      }\n\n      await updateDoc(userDocRef, {\n        bookmarks: isLiked ? arrayRemove(productData) : arrayUnion(productData),\n      })\n\n      setIsLiked(!isLiked)\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('Error toggling like:', error)\n    }\n  }\n\n  return {\n    isLiked,\n    toggleIsLiked,\n  }\n}\n\nconst useLikedProducts = () => {\n  const currentUser = useAppSelector((state) => state.auth.user)\n  const [likedProducts, setLikedProducts] = useState<IProduct[]>([])\n\n  useEffect(() => {\n    if (!currentUser) {\n      return\n    }\n\n    const unsubDoc = onSnapshot(\n      doc(db, 'users', currentUser?.uid),\n      (doc) => {\n        setLikedProducts(doc.data()?.bookmarks.slice())\n      },\n      (error) => {\n        alert(error)\n        setLikedProducts([])\n      },\n    )\n\n    return () => unsubDoc()\n  }, [currentUser])\n\n  return { likedProducts }\n}\n\nexport { useLikedProducts, useLiked }\n","import { useGetProductsQuery, useSearchProductsQuery } from '../../redux/api'\nimport CardItem from '../../components/CardItem/CardItem'\nimport Spinner from '../../components/Spinner/Spinner'\nimport { useLocation } from 'react-router-dom'\nimport './SearchPage.css'\nimport React from 'react'\n\nconst SearchPage = () => {\n  const { search: searchParams } = useLocation()\n  const query = new URLSearchParams(searchParams).get('query') || ''\n  const { data: products = [] } = useSearchProductsQuery(query)\n  const { isLoading } = useGetProductsQuery()\n\n  return isLoading ? (\n    <Spinner />\n  ) : products.length >= 1 ? (\n    <ul className=\"cards\">\n      {products?.map((product) => (\n        <li key={product.id} className=\"cards__item\">\n          <CardItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            image={product.image}\n            product={product}\n          />\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <div className=\"not-found\">\n      <h3 className=\"not-found__message\">Nothing was found</h3>\n    </div>\n  )\n}\nexport default SearchPage\n"],"names":["CardItem","_ref","id","price","title","image","product","isLiked","toggleIsLiked","useLiked","isTelegramShareEnabled","useContext","FeatureFlagContext","isLogin","useAuthentication","cardLikeButtonClassName","handleShareClick","useCallback","encodedURL","concat","encodeURIComponent","window","location","href","open","_jsxs","className","children","Link","to","role","_jsx","src","alt","_Fragment","onClick","likeHandler","type","productId","currentUser","useAppSelector","state","auth","user","navigate","useNavigate","setIsLiked","useState","useEffect","unsubscribe","onSnapshot","doc","db","uid","snapshot","data","bookmarks","some","item","async","userDocRef","setDoc","merge","productData","description","updateDoc","arrayRemove","arrayUnion","error","console","useLikedProducts","likedProducts","setLikedProducts","unsubDoc","_doc$data","slice","alert","SearchPage","search","searchParams","useLocation","query","URLSearchParams","get","products","useSearchProductsQuery","isLoading","useGetProductsQuery","Spinner","length","map"],"sourceRoot":""}