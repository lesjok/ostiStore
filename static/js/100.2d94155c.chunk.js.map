{"version":3,"file":"static/js/100.2d94155c.chunk.js","mappings":"uLAcO,MAAMA,EAAeA,CAC1BC,EACAC,MAEAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,GAAcC,EAAAA,EAAAA,IAAmBC,EAAAA,GAAOC,IAG5C,GAFAN,EAAQM,GAEJA,EAAU,CACZ,MAAMC,EAAqBC,EAAWP,GAEtC,MAAO,KACLE,IACII,GACFA,GACF,CAEJ,KAGF,OAAOJ,CAAW,GACjB,CAACF,GAAY,EAGZO,EAAcP,IAClB,MAAMQ,EAAOJ,EAAAA,EAAKK,YAElB,IAAKD,EACH,OAGF,MAAME,GAAgBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,iBAC/BC,GAAYC,EAAAA,EAAAA,IAAMJ,GAAeK,EAAAA,EAAAA,IAAM,SAAU,KAAMP,EAAKQ,MAElE,OAAOC,EAAAA,EAAAA,IAAWJ,GAAYK,IAC5B,MAAMC,EAAUD,EAASE,KAAKC,KAAKC,IAAU,CAC3CC,GAAID,EAAWC,GACfT,MAAOQ,EAAWE,OAAOV,MACzBW,IAAKH,EAAWE,OAAOC,KAAO,OAGhCzB,EAAWmB,EAAQ,GACnB,EAGSO,EAAcC,UACzB,MAAMnB,EAAOJ,EAAAA,EAAKK,YAElB,IAAKD,EACH,OAGF,MAAMoB,GAAoBjB,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,iBACnCiB,EAAeC,mBAAmBhB,GAClCiB,EAAY,CAChBjB,QACAkB,OAAQxB,EAAKQ,IACbS,IAAI,GAADQ,OAAKJ,IAGV,UACQK,EAAAA,EAAAA,IAAON,EAAmBG,EAClC,CAAE,MAAOI,GAEPC,QAAQD,MAAM,+MAA2CA,EAC3D,GAGWE,EAAgBV,UAG3B,IAFavB,EAAAA,EAAKK,YAGhB,OAGF,MAAM6B,GAAmBC,EAAAA,EAAAA,IAAI3B,EAAAA,GAAI,gBAAiB4B,GAElD,UACQC,EAAAA,EAAAA,IAAUH,EAClB,CAAE,MAAOH,GAEPC,QAAQD,MAAM,yMAA0CA,EAC1D,E,4GClFa,SAASO,IACtB,MAAOvB,EAASnB,IAAc2C,EAAAA,EAAAA,UAAwB,KAC/C,CAAE5C,IAAW4C,EAAAA,EAAAA,UAAuB,OACrC,UAAEC,IAAcC,EAAAA,EAAAA,OAEtB/C,EAAAA,EAAAA,IAAaC,EAASC,GAMtB,OAAO4C,GACLE,EAAAA,EAAAA,KAACC,EAAAA,EAAO,IACN5B,EAAQ6B,QAAU,GACpBF,EAAAA,EAAAA,KAAA,WAASG,UAAU,UAASC,UAC1BJ,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACHC,MAAO,KACPC,OAAQ,IACRC,UAAWnC,EAAQ6B,OACnBO,SAAU,GACVC,MAAO,CACLC,SAAU,UACVL,MAAO,OACPC,OAAQ,OACRK,WAAY,WACZR,SAEDS,IAAA,IAAC,MAAEC,GAAOD,EAAA,OACTE,EAAAA,EAAAA,MAAA,MAA4BZ,UAAU,gBAAeC,SAAA,EACnDJ,EAAAA,EAAAA,KAAA,KACEG,UAAU,gBACVa,KAAI,iBAAA7B,OAAmBd,EAAQyC,GAAO9C,OAAQoC,SAE7C/B,EAAQyC,GAAO9C,SAElBgC,EAAAA,EAAAA,KAAA,UACEG,UAAU,eACVc,KAAK,SACLC,QAASA,KAAMC,OAhCL1C,EAgCkBJ,EAAQyC,GAAOrC,IA/BrDc,EAAAA,EAAAA,IAAcd,QACdvB,GAAYkE,GAASA,EAAKC,QAAQC,GAASA,EAAK7C,KAAOA,MAFnCA,KAgCqC,EAAA2B,SAChD,aAXM/B,EAAQyC,GAAOrC,GAcnB,OAKXuB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWC,UACxBJ,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qBAAoBC,SAAC,uBAGzC,C","sources":["firebase/FirebaseHistory.tsx","pages/HistoryPage/HistoryPage.tsx"],"sourcesContent":["import {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  onSnapshot,\n  query,\n  where,\n} from 'firebase/firestore'\nimport { Dispatch, SetStateAction, useEffect } from 'react'\nimport type { IUser, IHistory } from '../types/type'\nimport { onAuthStateChanged } from 'firebase/auth'\nimport { auth, db } from './firebase.config'\n\nexport const useAuthState = (\n  setUser: Dispatch<SetStateAction<IUser | null>>,\n  setHistory: Dispatch<SetStateAction<IHistory[]>>,\n) => {\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n      setUser(authUser)\n\n      if (authUser) {\n        const unsubscribeHistory = getHistory(setHistory)\n\n        return () => {\n          unsubscribe()\n          if (unsubscribeHistory) {\n            unsubscribeHistory()\n          }\n        }\n      }\n    })\n\n    return unsubscribe\n  }, [setHistory])\n}\n\nconst getHistory = (setHistory: Dispatch<SetStateAction<IHistory[]>>) => {\n  const user = auth.currentUser\n\n  if (!user) {\n    return\n  }\n\n  const collectionRef = collection(db, 'searchHistory')\n  const userQuery = query(collectionRef, where('userId', '==', user.uid))\n\n  return onSnapshot(userQuery, (snapshot) => {\n    const history = snapshot.docs.map((historyDoc) => ({\n      id: historyDoc.id,\n      query: historyDoc.data().query,\n      url: historyDoc.data().url || '',\n    }))\n\n    setHistory(history)\n  })\n}\n\nexport const saveHistory = async (query: string) => {\n  const user = auth.currentUser\n\n  if (!user) {\n    return\n  }\n\n  const historyCollection = collection(db, 'searchHistory')\n  const encodedQuery = encodeURIComponent(query)\n  const newSearch = {\n    query,\n    userId: user.uid,\n    url: `${encodedQuery}`,\n  }\n\n  try {\n    await addDoc(historyCollection, newSearch)\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Ошибка при сохранении в историю поиска:', error)\n  }\n}\n\nexport const deleteHistory = async (queryId: string) => {\n  const user = auth.currentUser\n\n  if (!user) {\n    return\n  }\n\n  const searchHistoryDoc = doc(db, 'searchHistory', queryId)\n\n  try {\n    await deleteDoc(searchHistoryDoc)\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Ошибка при удалении из истории поиска:', error)\n  }\n}\n","import { deleteHistory, useAuthState } from '../../firebase/FirebaseHistory'\nimport Spinner from '../../components/Spinner/Spinner'\nimport { useGetProductsQuery } from '../../redux/api'\nimport { FixedSizeList as List } from 'react-window'\nimport type { IUser } from '../../types/type'\nimport React, { useState } from 'react'\nimport './HistoryPage.css'\n\ninterface HistoryItem {\n  id: string\n  url: string\n  query: string\n}\n\nexport default function HistoryPage() {\n  const [history, setHistory] = useState<HistoryItem[]>([])\n  const [, setUser] = useState<IUser | null>(null)\n  const { isLoading } = useGetProductsQuery()\n\n  useAuthState(setUser, setHistory)\n  const handleDelURL = (id: string) => {\n    deleteHistory(id)\n    setHistory((prev) => prev.filter((item) => item.id !== id))\n  }\n\n  return isLoading ? (\n    <Spinner />\n  ) : history.length >= 1 ? (\n    <section className=\"history\">\n      <List\n        width={1400}\n        height={550}\n        itemCount={history.length}\n        itemSize={45}\n        style={{\n          position: 'initial',\n          width: '100%',\n          height: '100%',\n          willChange: 'initial',\n        }}\n      >\n        {({ index }) => (\n          <li key={history[index].id} className=\"history__item\">\n            <a\n              className=\"history__link\"\n              href={`/search?query=${history[index].query}`}\n            >\n              {history[index].query}\n            </a>\n            <button\n              className=\"history__del\"\n              type=\"button\"\n              onClick={() => handleDelURL(history[index].id)}\n            >\n              Delete\n            </button>\n          </li>\n        )}\n      </List>\n    </section>\n  ) : (\n    <div className=\"not-found\">\n      <h3 className=\"not-found__message\">Nothing was found</h3>\n    </div>\n  )\n}\n"],"names":["useAuthState","setUser","setHistory","useEffect","unsubscribe","onAuthStateChanged","auth","authUser","unsubscribeHistory","getHistory","user","currentUser","collectionRef","collection","db","userQuery","query","where","uid","onSnapshot","snapshot","history","docs","map","historyDoc","id","data","url","saveHistory","async","historyCollection","encodedQuery","encodeURIComponent","newSearch","userId","concat","addDoc","error","console","deleteHistory","searchHistoryDoc","doc","queryId","deleteDoc","HistoryPage","useState","isLoading","useGetProductsQuery","_jsx","Spinner","length","className","children","List","width","height","itemCount","itemSize","style","position","willChange","_ref","index","_jsxs","href","type","onClick","handleDelURL","prev","filter","item"],"sourceRoot":""}